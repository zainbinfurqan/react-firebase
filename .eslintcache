[{"E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\reportWebVitals.js":"1","E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\utils\\concate.name.js":"2","E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\App.js":"3","E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\utils\\date.format.js":"4","E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\utils\\constum.message.js":"5","E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\utils\\image.valid.format.js":"6","E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\soket\\socket.js":"7","E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\index.js":"8","E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\utils\\firebaseInit.js":"9","E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\utils\\firebaseMethods.js":"10","E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\Firebae_CRUD\\index.js":"11","E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\Components\\Loader\\index.js":"12"},{"size":362,"mtime":1606216892590,"results":"13","hashOfConfig":"14"},{"size":277,"mtime":1611737739429,"results":"15","hashOfConfig":"14"},{"size":6523,"mtime":1614083118554,"results":"16","hashOfConfig":"14"},{"size":601,"mtime":1611777529193,"results":"17","hashOfConfig":"14"},{"size":696,"mtime":1611777764472,"results":"18","hashOfConfig":"14"},{"size":269,"mtime":1611754072441,"results":"19","hashOfConfig":"14"},{"size":2034,"mtime":1612877253443,"results":"20","hashOfConfig":"14"},{"size":500,"mtime":1606216892590,"results":"21","hashOfConfig":"14"},{"size":482,"mtime":1614153603766,"results":"22","hashOfConfig":"14"},{"size":1897,"mtime":1613969373719,"results":"23","hashOfConfig":"14"},{"size":1266,"mtime":1613143368289,"results":"24","hashOfConfig":"14"},{"size":178,"mtime":1613827797526,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cx56mz",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\reportWebVitals.js",[],"E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\utils\\concate.name.js",[],"E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\App.js",["53","54","55","56","57","58"],"import './App.css';\n// import concateName from './utils/concate.name'\n// import dateFormat from './utils/date.format'\n// import customTost from './utils/constum.message'\n// import ConvertToBase64 from './utils/convertTobase64'\n// import { imageFormatValid } from './utils/image.valid.format'\nimport { useEffect, useLayoutEffect, useState } from 'react';\nimport socketClient from 'socket.io-client';\nimport SocketInd from './soket/socket.js'\nimport randomstring from 'randomstring'\nimport firebase from './utils/firebaseInit'\nimport FirebaseCRUD from './Firebae_CRUD'\nimport Loader from './Components/Loader'\nimport firebaseMethod from './utils/firebaseMethods'\n// import io from 'socket.io-client'\n// console.log(socket_)\n\nconst db = firebase.firestore()\nfunction App() {\n\n  const [email, setEmail] = useState('')\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [users, setUsers] = useState([])\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [updatingItem, setUpdatingItem] = useState({})\n\n  useEffect(() => {\n    // fetchUsers()\n    realTimeListner()\n  }, [])\n\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    setLoading(true)\n    const data = {\n      email,\n      firstName,\n      lastName,\n      id: users.length + 1\n    }\n    const response = await firebaseMethod.addData('demo', data)\n    if (response.status) {\n      // fetchUsers()\n      setLoading(false)\n    } else {\n      setLoading(false)\n    }\n  }\n\n  async function fetchUsers(params) {\n    setLoading(true)\n    try {\n      const response = await firebaseMethod.getData('demo',)\n      console.log(response)\n      if (response.status) {\n        setUsers(response.message)\n        setLoading(false)\n      }\n    } catch (error) {\n      console.log(error)\n      setLoading(false)\n    }\n  }\n\n  async function handleDelete(item) {\n    setLoading(true)\n    try {\n      const response = await firebaseMethod.deleteDataWithId('demo', item.docId)\n      if (response.status) {\n        setLoading(false)\n        // fetchUsers()\n      }\n    } catch (error) {\n      console.log(error)\n      setLoading(false)\n    }\n\n  }\n\n  function handleOpenEdit(item) {\n    try {\n      setIsUpdate(true)\n      setFirstName(item.firstName)\n      setLastName(item.lastName)\n      setEmail(item.email)\n      setUpdatingItem(item)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  async function handleUpdate(e) {\n    e.preventDefault()\n    setLoading(true)\n    try {\n      const body = {\n        email,\n        firstName,\n        lastName\n      }\n      const response = await firebaseMethod.updateDataWithId('demo', updatingItem.docId, body)\n      console.log(response)\n      setLoading(false)\n      setIsUpdate(false)\n      // fetchUsers()\n      setEmail('')\n      setFirstName('')\n      setLastName('')\n    } catch (error) {\n      console.log(error)\n      setLoading(false)\n    }\n  }\n\n  function realTimeListner() {\n    try {\n      db.collection(\"demo\")\n        .onSnapshot((querySnapshot) => {\n          const rsp = querySnapshot.docs.map(doc => {\n            return {\n              docId: doc.id,\n              email: doc.data().email,\n              firstName: doc.data().firstName,\n              lastName: doc.data().lastName,\n            }\n          })\n          setUsers(rsp)\n        });\n    } catch (error) {\n\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <details>\n        <summary>\n          click me\n        </summary>\n        <p>zain ahmed her is i am for your work</p>\n      </details>\n      {loading && <Loader />}\n      <div className=\"card \" style={{\n        width: '42rem',\n        margin: '0 auto',\n        padding: '70px',\n      }}>\n        <div claclassNamess=\"card-body\">\n          <form>\n            <div className=\"form-group\">\n              <label for=\"first name\">First Name</label>\n              <input type=\"text\" onChange={(e) => setFirstName(e.target.value)} value={firstName} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter first name\" />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n            </div>\n            <div className=\"form-group\">\n              <label for=\"exampleInputEmail1\">Last Name</label>\n              <input type=\"text\" onChange={(e) => setLastName(e.target.value)} value={lastName} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter last name\" />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n            </div>\n            <div className=\"form-group\">\n              <label for=\"exampleInputEmail1\">Email address</label>\n              <input type=\"email\" onChange={(e) => setEmail(e.target.value)} value={email} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n            </div>\n\n            <div className=\"form-check\">\n            </div>\n            <button onClick={isUpdate ? handleUpdate : handleSubmit} type=\"submit\" className=\"btn btn-primary\">{isUpdate ? 'Update' : 'Submit'}</button>\n          </form>\n        </div>\n      </div>\n\n      <div style={{\n        padding: '0px 40px'\n      }}>\n        <table className=\"table \">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">First</th>\n              <th scope=\"col\">Last</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((item, index) => {\n              return (\n                <tr key={index}>\n                  <th scope=\"row\">{index + 1}</th>\n                  <td className=\"text-left\">{item.firstName}</td>\n                  <td className=\"text-left\">{item.lastName}</td>\n                  <td className=\"text-left\">{item.email}</td>\n                  <td className=\"text-left\">\n                    <i className='fa fa-trash m-2' onClick={() => handleDelete(item)} />\n                    <i className='fa fa-edit m-2' onClick={() => handleOpenEdit(item)} />\n                  </td>\n                </tr>\n              )\n            })}\n\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\utils\\date.format.js",[],"E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\utils\\constum.message.js",[],"E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\utils\\image.valid.format.js",[],"E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\soket\\socket.js",["59","60"],"import React, { useEffect, useState, useReducer } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst initialState = {\r\n    messages: [],\r\n    // message: '',\r\n};\r\n\r\nfunction reducer(state, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        // case 'ON_INITIAL_MESSAGE':\r\n        //     return { ...state, chatMessages: payload };\r\n        case 'ON_MESSAGE_CHANGE':\r\n            return { ...state, messages: [payload, ...state.messages] };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction SocketInd() {\r\n    const socket = io('http://localhost:3001/sockettesting', { transports: ['websocket', 'polling', 'flashsocket'] });\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    const [userId, setUserId] = useState(Math.floor(Math.random() * 15))\r\n    const room = '002010020023'\r\n    const [isRoomJoin, setIsRoomJoin] = useState(false)\r\n\r\n    useEffect(() => {\r\n        // socket.emit('testing', { name: 'zain' })\r\n        setupListner()\r\n    }, [])\r\n\r\n    function handleJoinRoom() {\r\n        socket.emit('join-room', { userId, room })\r\n        setIsRoomJoin(!isRoomJoin)\r\n    }\r\n\r\n    function setupListner() {\r\n        socket.on('new-message', payload => {\r\n            console.log('new-message', payload)\r\n            dispatch({ type: 'ON_MESSAGE_CHANGE', payload: { msgs: payload.msgs } });\r\n        })\r\n    }\r\n\r\n    function handleSendNotification() {\r\n        let snglMsg = `${userId}${room}${Math.floor(Math.random() * 15)}`\r\n        socket.emit('new-message', { userId, room, msgs: snglMsg })\r\n        // dispatch({ type: 'ON_MESSAGE_CHANGE', payload: { msgs: snglMsg } });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {console.log(state.messages)}\r\n            <button onClick={handleJoinRoom}>Hit me to join room on socket</button>\r\n            {isRoomJoin &&\r\n                <button onClick={handleSendNotification}>Hit me to send notification on socket</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(SocketInd);",["61","62"],"E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\index.js",[],"E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\utils\\firebaseInit.js",[],"E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\utils\\firebaseMethods.js",[],"E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\Firebae_CRUD\\index.js",["63","64","65","66","67"],"E:\\freelance\\genextech-asif\\test-app\\test-app-2\\src\\Components\\Loader\\index.js",[],{"ruleId":"68","severity":1,"message":"69","line":7,"column":21,"nodeType":"70","messageId":"71","endLine":7,"endColumn":36},{"ruleId":"68","severity":1,"message":"72","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":20},{"ruleId":"68","severity":1,"message":"73","line":9,"column":8,"nodeType":"70","messageId":"71","endLine":9,"endColumn":17},{"ruleId":"68","severity":1,"message":"74","line":10,"column":8,"nodeType":"70","messageId":"71","endLine":10,"endColumn":20},{"ruleId":"68","severity":1,"message":"75","line":12,"column":8,"nodeType":"70","messageId":"71","endLine":12,"endColumn":20},{"ruleId":"68","severity":1,"message":"76","line":53,"column":18,"nodeType":"70","messageId":"71","endLine":53,"endColumn":28},{"ruleId":"68","severity":1,"message":"77","line":25,"column":20,"nodeType":"70","messageId":"71","endLine":25,"endColumn":29},{"ruleId":"78","severity":1,"message":"79","line":32,"column":8,"nodeType":"80","endLine":32,"endColumn":10,"suggestions":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"78","severity":1,"message":"86","line":16,"column":8,"nodeType":"80","endLine":16,"endColumn":10,"suggestions":"87"},{"ruleId":"68","severity":1,"message":"88","line":20,"column":15,"nodeType":"70","messageId":"71","endLine":20,"endColumn":23},{"ruleId":"68","severity":1,"message":"88","line":25,"column":15,"nodeType":"70","messageId":"71","endLine":25,"endColumn":23},{"ruleId":"68","severity":1,"message":"89","line":30,"column":9,"nodeType":"70","messageId":"71","endLine":30,"endColumn":20},{"ruleId":"68","severity":1,"message":"90","line":38,"column":20,"nodeType":"70","messageId":"71","endLine":38,"endColumn":30},"no-unused-vars","'useLayoutEffect' is defined but never used.","Identifier","unusedVar","'socketClient' is defined but never used.","'SocketInd' is defined but never used.","'randomstring' is defined but never used.","'FirebaseCRUD' is defined but never used.","'fetchUsers' is defined but never used.","'setUserId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setupListner'. Either include it or remove the dependency array.","ArrayExpression",["91"],"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"React Hook useEffect has a missing dependency: 'firebaseListner'. Either include it or remove the dependency array.",["94"],"'response' is assigned a value but never used.","'unsubscribe' is assigned a value but never used.","'addContact' is defined but never used.",{"desc":"95","fix":"96"},"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [setupListner]",{"range":"99","text":"100"},"Update the dependencies array to be: [firebaseListner]",{"range":"101","text":"102"},[1017,1019],"[setupListner]",[386,388],"[firebaseListner]"]